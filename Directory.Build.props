<Project>

  <Import Project="$(MSBuildThisFileDirectory)\Binaries\User.props" Condition="Exists('$(MSBuildThisFileDirectory)\Binaries\User.props')" />

  <PropertyGroup>
    <VsVimEmptyAppConfig>$(MSBuildThisFileDirectory)References\Vs2012\App.config</VsVimEmptyAppConfig>
    <RepoPath>$(MSBuildThisFileDirectory)</RepoPath>
    <DebugType>full</DebugType>
    <LangVersion>Latest</LangVersion>
    <BinariesPath>$(RepoPath)Binaries\</BinariesPath>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <OutputPath>$(BinariesPath)$(Configuration)\$(MSBuildProjectName)</OutputPath>
    <BaseIntermediateOutputPath>$(BinariesPath)obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>

    <!-- The version of VS that should be targetted for testing. Prefer the
         current VS version but allow it to be changed via environment 
         variable for testing other versions --> 
    <VsVimTargetVersion Condition="'$(VsVimTargetVersion)' == ''">$(VisualStudioVersion)</VsVimTargetVersion>
    <VsVimTargetVersion Condition="'$(VsVimTargetVersion)' == ''">15.0</VsVimTargetVersion>

    <!-- Standard Calculation of NuGet package location -->
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == ''">$(NUGET_PACKAGES)</NuGetPackageRoot> <!-- Respect environment variable if set -->
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' AND '$(OS)' == 'Windows_NT'">$(UserProfile)/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' AND '$(OS)' != 'Windows_NT'">$(HOME)/.nuget/packages/</NuGetPackageRoot>
  </PropertyGroup>

  <!--
      When building WPF projects MSBuild will create a temporary project with an extension of
      tmp_proj.  In that case the SDK is unable to determine the target language and cannot pick
      the correct import. Need to set it explicitly here.
      See https://github.com/dotnet/project-system/issues/1467
    -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.tmp_proj'">
    <Language>C#</Language>
    <LanguageTargets>$(MSBuildToolsPath)\Microsoft.CSharp.targets</LanguageTargets>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(VsVimTargetVersion)' == '14.0' ">
    <VsVimAppConfig>$(MSBuildThisFileDirectory)References\Vs2015\App.config</VsVimAppConfig>
    <VsRunnablePropsFilePath>$(MSBuildThisFileDirectory)References\VS2015\Runnable.props</VsRunnablePropsFilePath>
    <DefineConstants>$(DefineConstants);VSVIM_DEV_2015</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(VsVimTargetVersion)' == '15.0' ">
    <VsVimAppConfig>$(MSBuildThisFileDirectory)References\Vs2017\App.config</VsVimAppConfig>
    <VsRunnablePropsFilePath>$(MSBuildThisFileDirectory)References\VS2017\Runnable.props</VsRunnablePropsFilePath>
    <DefineConstants>$(DefineConstants);VSVIM_DEV_2017</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(VsVimTargetVersion)' == '16.0' ">
    <VsVimAppConfig>$(MSBuildThisFileDirectory)References\Vs2019\App.config</VsVimAppConfig>
    <VsRunnablePropsFilePath>$(MSBuildThisFileDirectory)References\VS2019\Runnable.props</VsRunnablePropsFilePath>
    <DefineConstants>$(DefineConstants);VSVIM_DEV_2019</DefineConstants>
  </PropertyGroup>

  <PropertyGroup> 
    <ReferencePath>$(ReferencePath);$(MSBuildThisFileDirectory)References\Common</ReferencePath>
    <ReferencePath>$(ReferencePath);$(MSBuildThisFileDirectory)References\Vs2015</ReferencePath>
    <ReferencePath>$(ReferencePath);$(MSBuildThisFileDirectory)References\Vs2017</ReferencePath>
    <ReferencePath>$(ReferencePath);$(MSBuildThisFileDirectory)References\Vs2019</ReferencePath>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>

    <!-- This controls the places MSBuild will consult to resolve assembly references.  This is 
         kept as minimal as possible to make our build reliable from machine to machine.  Global
         locations such as GAC, AssemblyFoldersEx, etc ... are deliberately removed from this 
         list as they will not be the same from machine to machine -->
    <AssemblySearchPaths>
      {TargetFrameworkDirectory};
      {RawFileName};
      $(ReferencePath);  
    </AssemblySearchPaths>
  </PropertyGroup>

</Project>
